{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","data","setData","useState","loading","setLoading","error","setError","useEffect","async","response","axios","get","message","fetchData","React","createElement","map","post","key","id","title","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"yKAsCeA,MAnCf,WACE,MAAOC,EAAMC,GAAWC,mBAAS,KAC1BC,EAASC,GAAcF,oBAAS,IAChCG,EAAOC,GAAYJ,mBAAS,MAiBnC,OAfAK,oBAAU,KACUC,WAChB,IACE,MAAMC,QAAiBC,IAAMC,IAAI,8EACjCV,EAAQQ,EAAST,MACjBI,GAAW,GACX,MAAOC,GACPC,EAASD,EAAMO,SACfR,GAAW,KAIfS,IACC,IAECV,EAAgBW,IAAAC,cAAA,SAAG,cACnBV,EAAcS,IAAAC,cAAA,SAAG,UAAQV,GAG3BS,IAAAC,cAAA,WACED,IAAAC,cAAA,UAAI,SACJD,IAAAC,cAAA,UACGf,EAAKgB,IAAIC,GACRH,IAAAC,cAAA,MAAIG,IAAKD,EAAKE,IAAKF,EAAKG,WCnBnBC,MAZSC,IAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAC,KAAAF,EAAAG,KAAA,UAAqBD,KAAKE,IAAiD,IAAhDC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,OAAEA,EAAMC,QAAEA,GAASL,EACpEC,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAOV,GACPW,EAAQX,MCDDY,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHxB,IAAAC,cAACD,IAAMyB,WAAU,KACfzB,IAAAC,cAAChB,EAAG,QAORsB","file":"static/js/main.023a10a4.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction App() {\n  const [data, setData] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('https://silver-chainsaw-55x4pgvxg7rfj5g-3000.app.github.dev/api/aqi/london');\n        setData(response.data);\n        setLoading(false);\n      } catch (error) {\n        setError(error.message);\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  if (loading) return <p>Loading...</p>;\n  if (error) return <p>Error: {error}</p>;\n\n  return (\n    <div>\n      <h1>Posts</h1>\n      <ul>\n        {data.map(post => (\n          <li key={post.id}>{post.title}</li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}